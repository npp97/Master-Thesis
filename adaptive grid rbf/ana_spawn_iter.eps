%!PS-Adobe-3.0 EPSF-3.0
%XpdfVersion: 3.03
%%Creator: MATLAB, The MathWorks, Inc. Version 8.0.0.783 (R2012b). Operating System: Darwin 12.3.0 Darwin Kernel Version 12.3.0: Sun Jan  6 22:37:10 PST 2013; root:xnu-2050.22.13~1/RELEASE_X86_64 x86_64.
%%Title: /private/tmp/tp909c8d4d_5c38_4b72_9d7d_36c95f3257ec.eps
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 427 407
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.03 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font ERSUAZ+Helvetica
%!FontType1-1.0: ERSUAZ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 1999 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /ERSUAZ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 35 /numbersign put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 73 /I put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74E937CCBD27A32CB3BCF5FE6
C45D34D885BFB86FF35F8A39193D6AFA1154DD6CFCB449610B21CB4CFFB833C2
18528CD67B4B020215A159DAA1CD4DE9F6ED0EB9FDB22E7590446FDACF906E59
F676922B4D76BDC00E1B46AAA48EF0678F4576E301D769D3EC0FF37240B82C32
106A1BDE1E89584504F9FDEE992EA47C92002C24D4077FBA89FEC3E9825839C7
F875257F9E0919955645604A3D0ECFA1A14DAD641AE7948FC4D1BF52509D8719
26EE8F8A7E37394620BBA813B7A225F218322C41B98CFD2BDB8CD7FC7E25577D
A1F7E5DE741E7C3661E0169501BFC1343637031FCA550D28A868D487261C8042
7136171FB7579C47F9F388502A4E3319B8AA151C5494C0F31F4FAA79A113ADF0
38441CC8D5DAF14913CFE8B145C03ACD2D2AC1100C0547F87D81D7053B4A2636
C20F25057681F3C777F3E05C52EA3060040B724D424C07B8149A06D3016CB759
41D34265F62AB5CF577EBB8D4886E4110B6A181A72B36F447691289C1A1560C8
8358DE2FA1E21150475E2427829BAF702E3F0AF9ED01D06A526381D5372172A5
11C10A7CAAB354BD5852C57D5AFCE5DF3391E8806E7F784AF83D9235A3082AAF
5C5F1E8C5E4014E5CCDFE360A31BAE45C40BA80E9C29B65E5B63B8CAE8C85DCF
1C6D65D8B6B37D1FF57A2DB13EE797848114279D7786B1BFA304277B70219A69
7E94A5150984E9D9A585032598B8EAFB9CF4168EFFA6DEE53AAFE97DCD831F73
E298E08BF7233D2CAB1707E4C3E04EC53535AF6EA5188D2A0E77C2C3F911D872
0680312E1E7779FFB6872C538E99868373953F73DFE56272446C6E954C049845
2551F66F6CBCB8CDE5B0ACCEF898D09973A0217CE984BCBC16B14F2DA3DADDE8
EBCCB666DC2054A2BB958F763861A576E8030A8024DCB260D2A57EDAD2E7CE83
5EFF3A1F5A0CA66E36BDB218ED83C67646A45ABC55B559A4E238C20006A36232
3D130BA722EBF8102E0CDDE012290B328BB83FCE9561A48A2B95773F4410F657
E2A53629ADE2B7EDC006A405008D9F80E52B89B24BBE6B1DB30AFEBE2F3DFC1A
816733CD975334AC1AC5727872A6A0837A0D98F915110F86B36EE2530AFB8426
5E357D9AE19C08A067163AB167B723A469C6F99909CC83BD6DE05AD4F96456D7
3AAC7C5E2C538B46B9CD7B188156AFE251491A29570062C75347793EBBEE5D84
6ABA6908EA5095241837ECF3B6C2155B49AC502A3CA8BF659D433D6EBC86D827
C7E33C368DB436C02C8DB66020B68B990D518165DBACF91A29797F71B4D8E7DA
27F15B6B635BA6553CC88E1EEAB8206A9C3C0ACAC05FD6CF6A0B19F6A83F668B
A1BD0994AE833FF8A0487BE6F139E882C0E3BAD988B4A3F48773BCC2C4CF7E91
92CEF9388C85877B793D2C36736B0C4C15C82C0AF3215DE8903F56599BA20E3E
F4CA098416061CBEDBCEA98081794C245B26267A5D2B87DEB72C6E51694CAEE6
A68920AA3372C7DCBE75B8BE75C5B971BED0219833E16B4A63C0D7EEBEA472F1
BD9AF3E16B689B8FC2A28FFB59DCCB9589D3AA93687747C5A502FFD3EE5A0963
96833BD4C78174D8A36AE9F04BBC4216E8DE2D41324C6BA160C837FCE0A2A8BB
1B1C7A41D1E4BAAF910B76DB3BE4C44D49D1FF216AD5BC93244CB796A07A012E
80B70BA97CEE83EDDDA081C6AB21C3290140A3F1F10C1CAC33032C7A0EC8222B
2F92193F54CBBB3451A760D53BC19F905F5F23BB36F9383C36B67D29EC991B13
AD34DB0DD15BA198733DE870C989AB0386AD7F270323492016D68C443BD66D25
FA66A16D58B73FBF8C359477168F13859F6B40EA5A97E147D61928AAC2507228
3D759B9828A510A2E1F57CD7561AFBB88E1F5363847A5A0281C72CE692CCDC2E
507966652ED99EAB4516577ABE493F28EC3089BB204669314672066A5FC26F77
71E1B808FBE88D43D4FFBF97C97A2BF2AC538269750169CB9DAA5388CA53792B
A8FCF71EE1EA2B31D9A02AF80F598E39E8C66FCFD54345C9730FC7372B7F53FC
562357184E0492D03870ECEFEE5EE028F968CD0F5351AED83531FB16F2AF7BAC
6C42E348DE316F8C250F9C3FCCC7D458545D4EA6DD31F5FF1F961ED9B1FA21FF
18C0386A9CB1D07467936272CAB7995BB13200D19E2182A0663A27AEF8E8BF8C
5E1CB3685802CB5433E88F141E16C7F7FB93606C19007B80B2E8152840D138DE
F016548A6A36A918881F947A52E6357B9B887DC5BD0F5074790A831471B010D7
52B87314C37786F4C600830611C0BAAD8C34767EB1E671AC4F416C5097FB6AC2
74B38F50C1F385728F4040B741B59CFE6FC661EDE6E2ED3151E32AC09AFC46B2
E36B20D9166169C8B9233D903F83FCCFECFD1A82F4801D35890920D1376D85EB
827279721DDF976143D8C28B6DC7DFEC977C961613A4AFF8CA93E054D7831527
C9FA0AF2409D078C8911B642439EA6D2AA2819C8D7BB8C07519BFBDC110BED59
ED2D8AA8F1FAA17C120F6209F43D8E15BEF9544933CF456C16E5EFB40167067F
20C0F1868D3F8467A33818B11C83DBC5CB13BCD7EEFDFE641608CEB738ACE6B0
63949B2EE753DE09AE37943D2D5DD8F1FD275B7C76F9B5F06EB7745FC90D3E99
17DBCB232418CB8307987EF2517570CE7861D4CC76EDDD864351C3CAE6094546
91FA7F2B9AC61C606E0FC0337EC6666FE167BD5F83AC54010BD6821DB22DC737
40CE2C1A81281EDDF3D77F41CD7AAC7240726FD5C474DA830AF846A8C272B530
3D4F6B064F9428327E3A3224C99EE385B6ADBA88082F2F144183F916E7799250
005C9945F4EA4DCBAC7980058DD8EBA6E01A7CBBECC9374D050AB8242B7BACD1
B3BF7665608E13026BAD8C0AE22C582A74FA139F6DC5E190BC2AC917ADFD4B04
E25E710B82F22C6FEC4DFE718E47E64E7C670068CA64BE3C1BC924CE217C65F5
65F26118612D6902C2C411089C0E7905D1FA09B856144C8CBBF8921F4EAA8870
6CF42A5FB3D57DB6A4D0E0872DE4E4B9C5CA2BAF09117E08717234F726B97803
DFCACBC27981ED21904AD9C7214D7F4F4F49CF807B81AF1156D4DA5347E430F4
C3A55C978D8818B30EAA76E027A49FFED24998316980664DD16C98E39E457FF7
B1974473391C271FF93D21D7274B9EC630895580DF48C874D2333F6FF7A732A6
E00ABB3F43481F5B5977385C51FAC2C60D1D9285C972A6FCF93FD36D378DAF50
E11440B9B7469BF8E2797BFC75C3472C72C53BE4E39FC33AD23646CF3FEA61EE
C2C1B7B64A0B544FE38E2692295C16C4063FCE3E9A61CE3E2AEFE1E5716C8E41
9ECE0BE8D24359F810610456638153705D0AF20574B38A1CDCA3D6E67565B55A
A2C916E52A9B3C9223FD1B591C1EC5558D93081A0106CD4D1A7677DDE5A85213
640830E8B7AAF34032DC9817436A38F81DDE503EB796672E0F854FFC9EEC1CB2
70D5E673EE0AAD5D5057082C057E0F4DDA0772B473D352B8FFDC9C46176154EB
ABE573F3EE914E0DBA83DC5532C0CFFFDDFB2EA72E361127AA6F1A3434E7B53D
6D71D9C6CF41A9C0AD472D32DF5BDDC7BF86375817AE363A7BA43E1CDC8041AF
3DEBEF043490A26BDA132E5034543BCC5B64DD7BAE57617DB65486E1BAC7C4B8
E96F0410D8F91B7503B9EA5A8F690A7D70A4600B6317AB954961BDCC87ACE38A
B4259CCD7FAB4209886785ADBFEEE4724EF9C45CB831D939C36F9B2D92A2FFCF
A0B642DEBD2FA530ACDAE70A2AEBAE8126D1AD95C6DAB7561F512E5826A81BF0
AFD6CE913E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /ERSUAZ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 427 407 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
2.5 3.33203 4267.5 4066.67 re
W
/DeviceGray {} cs
[1] sc
2.5 3.33203 4267.5 4066.67 re
f
641.668 310 3590 3590.83 re
f*
9 w
1 j
/DeviceGray {} CS
[1] SC
641.668 310 3590.002 3590.83 re
S
/DeviceGray {} CS
[0] SC
641.668 310 m
4231.67 310 l
S
641.668 310 m
641.668 3900.83 l
S
1539.17 310 m
1539.17 346.668 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 115.083 5.8332] Tm
0 0 Td
/F8_0 24 Tf
(original)
[13.344
0
7.992
0
5.328
0
13.344
0
5.328
0
13.344
0
13.344
0
5.328
0] Tj
Q
3334.17 310 m
3334.17 346.668 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 284.583 5.8332] Tm
0 0 Td
/F8_0 24 Tf
(improved)
[5.328
0
19.992
0
13.344
0
7.992
0
13.344
0
12
0
13.344
0
13.344
0] Tj
Q
641.668 310 m
677.5 310 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 47.9168 22.0832] Tm
0 0 Td
/F8_0 24 Tf
(6)
[13.344
0] Tj
Q
641.668 908.332 m
677.5 908.332 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 47.9168 81.9168] Tm
0 0 Td
/F8_0 24 Tf
(7)
[13.344
0] Tj
Q
641.668 1506.67 m
677.5 1506.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 47.9168 141.75] Tm
0 0 Td
/F8_0 24 Tf
(8)
[13.344
0] Tj
Q
641.668 2105.83 m
677.5 2105.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 47.9168 201.667] Tm
0 0 Td
/F8_0 24 Tf
(9)
[13.344
0] Tj
Q
641.668 2704.17 m
677.5 2704.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.5832 261.5] Tm
0 0 Td
/F8_0 24 Tf
(10)
[13.344
0
13.344
0] Tj
Q
641.668 3302.5 m
677.5 3302.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.5832 321.333] Tm
0 0 Td
/F8_0 24 Tf
(11)
[13.344
0
13.344
0] Tj
Q
641.668 3900.83 m
677.5 3900.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.5832 381.167] Tm
0 0 Td
/F8_0 24 Tf
(12)
[13.344
0
13.344
0] Tj
[0 1 -1 0 24.6668 151.25] Tm
0 0 Td
/F8_0 24 Tf
(# Iterations)
[13.344
0
6.672
0
6.672
0
6.672
0
13.344
0
7.992
0
13.344
0
6.672
0
5.328
0
13.344
0
13.344
0
12
0] Tj
Q
Q
q
641.668 309.168 3590.832 3591.662 re
W
/DeviceGray {} cs
[0] sc
1494.16 310 90 449.168 re
f
5 w
/DeviceGray {} CS
[0] SC
1494.17 310 90 449.168 re
S
/DeviceGray {} cs
[1] sc
1090 759.168 898.332 448.332 re
f
1090 759.168 898.332 448.332 re
S
1090 1207.5 898.332 898.336 re
f
1090 1207.5 898.332 898.332 re
S
/DeviceGray {} cs
[0] sc
1494.16 2105.84 90 598.332 re
f
1494.17 2105.83 90 598.336 re
S
Q
q
2 3 4268 4067 re
W
/DeviceGray {} cs
[0] sc
1552.5 3900.83 m
1552.5 3893.47 1546.53 3887.5 1539.17 3887.5 c
1531.8 3887.5 1525.83 3893.47 1525.83 3900.83 c
1525.83 3908.2 1531.8 3914.17 1539.17 3914.17 c
1546.53 3914.17 1552.5 3908.2 1552.5 3900.83 c
f
Q
q
641.668 309.168 3590.832 3591.662 re
W
/DeviceGray {} cs
[0] sc
3289.16 310 90 598.336 re
f
5 w
/DeviceGray {} CS
[0] SC
3289.17 310 90 598.332 re
S
/DeviceGray {} cs
[1] sc
2885.83 908.336 897.5 598.332 re
f
2885.83 908.332 897.5 598.336 re
S
2885.83 1506.67 897.5 599.168 re
f
2885.83 1506.67 897.5 599.164 re
S
/DeviceGray {} cs
[0] sc
3289.16 2105.84 90 598.332 re
f
3289.17 2105.83 90 598.336 re
S
Q
q
2 3 4268 4067 re
W
/DeviceGray {} cs
[0] sc
3347.5 3900.83 m
3347.5 3893.47 3341.53 3887.5 3334.17 3887.5 c
3326.8 3887.5 3320.83 3893.47 3320.83 3900.83 c
3320.83 3908.2 3326.8 3914.17 3334.17 3914.17 c
3341.53 3914.17 3347.5 3908.2 3347.5 3900.83 c
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font ERSUAZ+Helvetica
%%EOF

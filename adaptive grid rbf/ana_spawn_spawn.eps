%!PS-Adobe-3.0 EPSF-3.0
%XpdfVersion: 3.03
%%Creator: MATLAB, The MathWorks, Inc. Version 8.0.0.783 (R2012b). Operating System: Darwin 12.3.0 Darwin Kernel Version 12.3.0: Sun Jan  6 22:37:10 PST 2013; root:xnu-2050.22.13~1/RELEASE_X86_64 x86_64.
%%Title: /private/tmp/tpe8455146_c511_4437_816a_d85ca5a323b5.eps
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 481 447
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.03 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font UCXQVH+Helvetica
%!FontType1-1.0: UCXQVH+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 1999 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /UCXQVH+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 732] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74E937CCBD27A32CB3BCF5FE6
C45D34D885BFB86FF35F8A39193D6AFA1154DD6CFCB449610B21CB4CFFB833C2
18528CD67B4B020215A159DAA1CD4DE9F6ED0EB9FDB22E7590446FDACF906E59
F676922B4D76BDC00E1B46AAA48EF0678F4576E301D769D3EC0FF37240B82C32
106A1BDE1E8A66621759E2984E186AC14739D6DCEAB9B2C81FB8C8E46CE7F875
D30EB039C1A479CF8504A8BE8E0378E44E923377AADC0AF81C83F0B67B698AE4
17DF7319CF1F9B9520AF8C938B88394859F5EBC5011945D8B6DF93532289B6F4
0DF9F0DA44DD45A61E95153D2E05D91698C69B6C7B3EC0F16851F00D020CA72D
69B3E3754621289AE7F894B58BAF22195461C1CCC5F80325FD8F9E9DB1B0C9B8
520D3A3D76EA5B4E6AA2531988667249D78FE15642D561FC334A474B9977ECFD
8034D094CEAA9D9DB155CDCBD9F7069B615128B149F806BF626E385E79ED0B01
10AE08A628157CD5616FA11208EE15B6DF48FC7B8956C57C625309D6176DD5C2
C2562B0502C0A4F98E2D5BBF359F857035050344C24A2670C078EBDD3C63E751
D270B3624B95E4B70B5203457BD4D0F564EEC03F11E9009B22875F8267C8B875
7C8FFF0799607D9FD584B63C89EFA7FC1A91B8D2814251B58DF5420A3FBA18D8
34765F85AE6DB5B4BB497DDE3F80FB192CEFEF7D0CE9131FA1EB7ACDB212C35B
A9D7FF1EA71896A1F8C1C6D636B94A6E94B1B8B245B21E3658E0F38DA19CAC24
ED2F19A56C329DCC7A5FDB236372452FFB62FFA63DFF96867A7B5D97413450B8
7024A9FFF7D9906217B2295EE44B78C244FD0D615F0F2693ADA43FF12C0250FB
8BF8061D5F68DC7F2677C53723906A17CC8EC8056CD28B8BEED7E64C40E4B86D
12E30F5858717AFDB46B72FFD37E0FFACCDE0DEC91A481E5E0AA6E4B2D8584AE
B4043EA703C4E3A6FF7148F6152EE335FE27DD53BE1783C00BDA118AA8D9FB9F
4CBF2F9B65C1307907EA86DDFD6BF1BAC83F3C7FAD6AE33883B3B455447C3068
E93AAB303A831B1A484307C594474EA9692DF3D211CEE34B6B5743BBEA662DBC
0359F7A49BD3DE1A4508E846CD9C487779AE328EE33E34DEF75D66D52E67A7B0
B6F72491A4398FC9075345AC848EE3CC01878F0001E45A198637192B656F906E
88F3EC31BD897DBFD50B8AC1D5CFAB188D7A0DAB08717790F096C6E52494B312
AB8625F22EFB17BC407CAC4B1C0C5D5EC8E91FEB9EE2A80DAA3244C386E686B1
37F22FE332600ED02043E065B26487AE54377687A7E02F52DE7F4B4153A6FD50
EFED42890A986B19546AB672A0F397D66ACDB4012E492EC1E7BD11E4525301F1
356AE98BA2481D58C0E848BCB7CF9312C3D1946F877427D5DB91EBFEFABAC020
84E29A4BBDFADC52A545C66B6887DD57413B054BD8AB55D89ED83AC15E6128C9
71D9A28012677B53DF4552839C7FB6C2C1DEBD2C724C290DB732F1C67BCACF33
B2290FC065D5276099F26FB72CA45EAB1FBF605F0D468C245516E9CC5C897ED3
DB05F34DC19D2E06D9186DFA29712FE39EEF52771D2521DD65386421631F6D3C
8FF2F92689C34AE58C9F18752C6F88371BEA8435AE56259916587C8B0B219EF0
89FDC0A1788B438F2972CA223E05AFBBF27DCFFF4B84684D2C53E1296EC035AE
2D2F60723A57573D5D0A764C86A7F43BECC11CBED39A51AEE4FBA3AE05A51AEA
42ACE3619E091D504E0A8B5205BC8F8D2CA57CC1C3845130637C4D35D3F2F975
1E0E2D2C206E4ED4FA74C2F4C6489B72ABAC01FCFD91D44329AA740CEBA01D0C
513F811E276AA5C1A1359D9E5B009CF915C05C8882E38C4DF7977A212773030C
6EA043C966D8FE7D0AE2407F695BAD98ECB441B8CD9F1ECEF535127E75ED0539
E609146A856AB96A2B04423EAEE1797934ABF54E38891E79961D30CDBC190522
B547D43FFAA0BB7EC470D35A291D26A30F0D19F65ED8452597242D61B14455F8
FED3D4EE4C100D6F50394F1A45FAC3975CB83830F6FB5BFA2E01ABEEECD0AF6B
35A9FE1C94B8FC7A054CE6066E3683AC3F764328EF7E6B111DA50A4056BE2C85
079817A9C0C640A81058C30239F872A99427BCF4E475E683C0881870B6F363DF
06E0D7170E1B50B5191D436895C83B73771AE3944D19C7968D104ACBF1815984
62462D0ED66879F9560D693CAD4AE771B4E39C676B90ECB7EA07EBBAB6F818CB
730C7AD89DB80A501FB27F1BC1762B4829094B98D4A236AFEF407CCE9C6B5E83
1122EF467FDA3A0AF7C7BFFF00C0C02C666DD862A2468F2D5181D6EE8A247EDD
99C6AA9C3D97B45981A35CFFA7E6BFD9735EF41C52E7247EF2C2E1079012EAE1
4C6282A6B589ADB61DBDCD4F985D046A22B3AB3FAC069D19FD55219BF62F698B
7EA7638DF2DC050DDB7F71421FD2924741AF60D6113C2D8CC2B3D91DBB4387C7
D12C087E1F4DC0D7BAD6F6077C7B958B0CB7E2EC3D2106756CF2EEFF261F9D17
326D69E205357B8F965E69C04FB3FB2884EC30C4064486916B4C0301CFCE6151
D42C2B0867C8098FDBEA85AFFD8FF61E716FF9B46AD617E90A3F4BACFBF77769
E9965DD7635B01165A6F6865536B6538E6BAC901C951AC133082C6E593FA8114
BE5BFD1AA124FBD31DD848142C31A66D77827E44D3F22FC44CD562D03486BB67
1553E94A1267ECFFF4D2FBFC1EBA92D7EAC57E9160A5A2AB3D1FF834DEC8952F
382FE802C7C4CC8748E9DE0561AEF536DF053AE063C1F20071D7DDDAFF8BAB52
96A7CE0B3F91063C08BD7C68222914B443F3524DAC6FB3AD6A8C52FAFB62D484
D084C9061A49CF5614F29E16EE005BE3839FA2765D7436C6DF191AB3861C5620
F557778782E67547450BCE96D43B95D0F7B51C3AD545A27EF4E7679079AD64CC
7610969F73F2512CBF9CD1B689982C7C5787DF6D3EAAB8DEA495CDC343DD4377
F678E72B6188C7F881379749C6D974E0BDB0E20236CC0BC2ADF940B14686A698
8D1D27178F0D12E470A2623642A0504B4732BE4BDA0CB8F359F42EF508DCE7A6
E3CB12FAE42147420526F167F3905B54CF71D462785816422AC8622905B810BC
873138636DAA43C7E9BA65D22AABCE0A1BE40E3B43515544C4E7F19CF22CF8E6
E75598B624EAF70C9C0E4788D9AC562FE6F84089E6A966D3A9CDAC6A4772C3E6
95278A6F477A56CDBBD7F2006A3088481D900C92E219F419DAE3566D6B4B737B
9F7F239182BD6BE73A3CD09CCDE36902E206FDF77F1EECFEF2C6229A469D20D3
B823152D6B294F99BF06E7F7EC56B3D6F4B8499A34B613B01DDA1AA6FC49E560
8E8E0BC1A7AFC3AEA17268BDEC97046B12D523672557C37F3308393F7B2EE86D
15E69E26026A3B07DBFAA2325B224528D95EEC2D3A473164D30D2C02E7709092
5A06825C659E0DD3902E5E92ADD470555369AA981E52671AEACD4AEED7F22522
B6C46C8272992D6A58C6424A6D2CC4E87822F643ED9400A3B13FED630FAC1C87
D522BC9292FFB7C7D513FA1178ABD831D32346112D3827FF4A49A7D5B5396A3C
B2D733F88FBAF215A852A1D0B20741A7C227F6CB79153980CC30DD7C771A722F
C5930CBD69792CD1595606B5C2CFE728B01AA6E712A1C56DD1C1D109CFFB42BE
88C0DD7AA554139F11BC927AD9A529624FCA79548ECB3C60AF34CEAC49CB9E41
E1082D25BE039E6F7BAAEEF2C1BC8A418A8AAAA44F816864FAF50A3ECA76C2F5
3C7F445BA84DDD7128427211B5A5F13056B378011AA0840B58E4EA7B93054DD4
8F9807D1BDDF13049794F754DF8628490F724DDC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /UCXQVH+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 481 447 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
7.5 7.5 4802.5 4462.5 re
W
/DeviceGray {} cs
[1] sc
7.5 7.5 4802.5 4462.5 re
f
779.168 314.168 3990 3990 re
f*
9 w
1 j
/DeviceGray {} CS
[1] SC
779.168 314.168 3990.002 3990.002 re
S
/DeviceGray {} CS
[0] SC
779.168 314.168 m
4769.17 314.168 l
S
779.168 314.168 m
779.168 4304.17 l
S
1776.67 314.168 m
1776.67 354.168 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 138.833 6.25] Tm
0 0 Td
/F8_0 24 Tf
(original)
[13.344
0
7.992
0
5.328
0
13.344
0
5.328
0
13.344
0
13.344
0
5.328
0] Tj
Q
3771.67 314.168 m
3771.67 354.168 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 331.833 6.25] Tm
0 0 Td
/F8_0 24 Tf
(modified)
[19.992
0
13.344
0
13.344
0
5.328
0
6.672
0
5.328
0
13.344
0
13.344
0] Tj
Q
779.168 314.168 m
819.168 314.168 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 35.0832 22.5] Tm
0 0 Td
/F8_0 24 Tf
(200)
[13.344
0
13.344
0
13.344
0] Tj
Q
779.168 1311.67 m
819.168 1311.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 35.0832 122.25] Tm
0 0 Td
/F8_0 24 Tf
(250)
[13.344
0
13.344
0
13.344
0] Tj
Q
779.168 2309.17 m
819.168 2309.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 35.0832 222] Tm
0 0 Td
/F8_0 24 Tf
(300)
[13.344
0
13.344
0
13.344
0] Tj
Q
779.168 3306.67 m
819.168 3306.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 35.0832 321.75] Tm
0 0 Td
/F8_0 24 Tf
(350)
[13.344
0
13.344
0
13.344
0] Tj
Q
779.168 4304.17 m
819.168 4304.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 35.0832 421.5] Tm
0 0 Td
/F8_0 24 Tf
(400)
[13.344
0
13.344
0
13.344
0] Tj
[0 1 -1 0 25.1668 48.75] Tm
0 0 Td
/F8_0 24 Tf
(Total number of spawned particles)
[14.664
0
13.344
0
6.672
0
13.344
0
5.328
0
6.672
0
13.344
0
13.344
0
19.992
0
13.344
0
13.344
0
7.992
0
6.672
0
13.344
0
6.672
0
6.672
0
12
0
13.344
0
13.344
0
17.328
0
13.344
0
13.344
0
13.344
0
6.672
0
13.344
0
13.344
0
7.992
0
6.672
0
5.328
0
12
0
5.328
0
13.344
0
12
0] Tj
Q
Q
q
779.168 313.332 3990.832 3990.838 re
W
/DeviceGray {} cs
[0] sc
1726.67 1531.67 100 254.168 re
f
5 w
/DeviceGray {} CS
[0] SC
1726.67 1531.67 100 254.164 re
S
/DeviceGray {} cs
[1] sc
1278.34 1785.84 997.5 503.332 re
f
1278.33 1785.83 997.5 503.336 re
S
1278.34 2289.17 997.5 419.168 re
f
1278.33 2289.17 997.5 419.164 re
S
/DeviceGray {} cs
[0] sc
1726.67 2708.34 100 478.332 re
f
1726.67 2708.33 100 478.336 re
S
Q
q
7 7 4803 4463 re
W
/DeviceGray {} cs
[0] sc
1790 4284.17 m
1790 4276.8 1784.03 4270.84 1776.67 4270.84 c
1769.3 4270.84 1763.33 4276.8 1763.33 4284.17 c
1763.33 4291.53 1769.3 4297.5 1776.67 4297.5 c
1784.03 4297.5 1790 4291.53 1790 4284.17 c
f
Q
q
779.168 313.332 3990.832 3990.838 re
W
/DeviceGray {} cs
[0] sc
3721.67 1232.5 100 438.336 re
f
5 w
/DeviceGray {} CS
[0] SC
3721.67 1232.5 100 438.332 re
S
/DeviceGray {} cs
[1] sc
3272.5 1670.84 997.5 359.164 re
f
3272.5 1670.83 997.5 359.168 re
S
3272.5 2030 997.5 424.168 re
f
3272.5 2030 997.5 424.168 re
S
/DeviceGray {} cs
[0] sc
3721.67 2454.17 100 433.332 re
f
3721.67 2454.17 100 433.332 re
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font UCXQVH+Helvetica
%%EOF
